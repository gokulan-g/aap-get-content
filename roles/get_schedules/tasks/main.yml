---
# tasks file for get_schedules
- name: init list_temp_api_response
  set_fact:
    list_temp_api_response: []
    
- block:
    - name: include get_individual_schedule.yml for schedules
      include_tasks: get_individual_schedule.yml
      loop: "{{ list_of_schedules }}"

    - name: show results
      debug:
        var: list_temp_api_response

    - name: set list_temp_api_response back to list_api_reponse
      set_fact:
        list_api_response: "{{ list_temp_api_response }}"
  when: "'all' not in list_of_schedules"

- block:
    - name: set api to get all the schedule details from the organization
      set_fact:
        api: /api/v2/organizations/?name={{ user_org | urlencode }}
  
    - name: include get_aap_api_reponse role to fetch api details
      include_role: 
        name: get_aap_api_response

    - name: set api to get all the schedule details
      set_fact:
        api: "/api/v2/schedules/"
  
    - name: include get_aap_api_reponse role to fetch api details
      include_role: 
        name: get_aap_api_response
  when: "'all' in list_of_schedules"

- name: assign the list_api_response to list_api_details_schedules
  set_fact:
    list_api_details_schedules: "{{ list_api_response }}"

- debug:
    var: list_api_details_schedules | length

- name: Get survey variables for schedules
  include_tasks: extract_schedule_details.yml
  loop: "{{ list_api_details_schedules }}"

- name: print invalid schedule names
  debug:
    var: list_invalid_schedules
  when: list_invalid_schedules is defined and list_invalid_schedules | length > 0

- name: Write schedule details to YAML file
  template:
    src: schedule_details.yml.j2
    dest: "{{ playbook_dir }}/{{ repo }}/{{ user_org | lower }}_schedule_details.yml"
  when: (generate_yml_file and schedule_list) | length > 0 and (append_or_create == 'create')


- name: Append schedule details to YAML file
  block:
    - name: Append schedule details to YAML file
      template:
        src: schedule_details.yml.j2
        dest: "{{ playbook_dir }}/temp_schedule_details.yml"

    - name: Read old YAML file content
      include_vars:
        file: "{{ playbook_dir }}/{{ repo }}/{{ user_org | lower }}_schedule_details.yml"
        name: old_schedule_yaml
      ignore_errors: true

    - name: print the old list
      debug:
        var: old_schedule_yaml
      when: old_schedule_yaml is defined

    - name: Read new temporary YAML file content
      include_vars:
        file: "{{ playbook_dir }}/temp_schedule_details.yml"
        name: new_temp_schedule_yaml

    - name: print the newly fetched list
      debug:
        var: new_temp_schedule_yaml

    - name: Compare old_schedule_yaml with new_temp_schedule_yaml
      set_fact:
        updated_schedule_yaml: "{{ (new_temp_schedule_yaml.controller_schedules) | union(old_schedule_yaml.controller_schedules ) | unique(attribute='name') }}"
      when: old_schedule_yaml is defined and old_schedule_yaml.controller_schedules is defined and (old_schedule_yaml.controller_schedules is not none)

    - name: Assign the updated schedule list
      set_fact:
        schedule_list: "{{ updated_schedule_yaml }}"
      when: old_schedule_yaml is defined and old_schedule_yaml.controller_schedules is defined and (old_schedule_yaml.controller_schedules is not none)

    - name: Assign the new schedule list
      set_fact:
        schedule_list: "{{ new_temp_schedule_yaml.controller_schedules }}"
      when: (old_schedule_yaml.controller_schedules is none) or (old_schedule_yaml is not defined and old_schedule_yaml.controller_schedules is not defined)

    - name: show the schedule list
      debug:
        var: schedule_list
  
    - name: Append schedule details to YAML file
      template:
        src: append_schedules.yml.j2
        dest: "{{ playbook_dir }}/{{ repo }}/{{ user_org | lower }}_schedule_details.yml"

  when: (generate_yml_file and schedule_list) | length > 0 and (append_or_create == 'append')  


###############################################################################
# auto-generated by aap-get-content
# total_job_templates: {{ job_template_list | length }}
# Ansible Automation Platform: https://{{ aap_hostname }}
# AAP Job ID: {{ tower_job_id }}
# Git User ID: {{ github_user_info.json.login }}
###############################################################################
---
controller_templates:
{% for template in job_template_list %}
- name: {{ template.name | to_json(ensure_ascii=False) }}
  description: {{ template.description | default('') | to_json(ensure_ascii=False) }}
  organization: {{ template.organization }}
{% if template.project is defined and template.project %}
  project: {{ template.project | to_json(ensure_ascii=False) }}
{% endif %}
  playbook: {{ template.playbook }}
{% if template.inventory is defined and template.inventory %}
  inventory: {{ template.inventory | to_json(ensure_ascii=False) }}
{% endif %}
{% if template.execution_environment is defined and template.execution_environment %}
  execution_environment: "{{ template.execution_environment }}"
{% endif %}
  job_type: {{ template.job_type }}
{% if template.forks is defined and template.forks %}
  forks: {{ template.forks }}
{% endif %}
{% if template.limit is defined and template.limit %}
  limit: {{ template.limit }}
{% endif %}
{% if template.verbosity is defined and template.verbosity %}
  verbosity: {{ template.verbosity }}
{% endif %}
{% if template.job_tags is defined and template.job_tags %}
  job_tags: {{ template.job_tags | default('',true) }}
{% endif %}
{% if template.force_handlers is defined and template.force_handlers %}
  force_handlers: {{ template.force_handlers }}
{% endif %}
{% if template.skip_tags is defined and template.skip_tags %}
  skip_tags: {{ template.skip_tags }}
{% endif %}
{% if template.start_at_task is defined and template.start_at_task %}
  start_at_task: {{ template.start_at_task }}
{% endif %}
{% if template.diff_mode is defined and template.diff_mode %}
  diff_mode: {{ template.diff_mode }}
{% endif %}
{% if template.use_fact_cache is defined and template.use_fact_cache %}
  use_fact_cache: {{ template.use_fact_cache }}
{% endif %}
{% if template.host_config_key is defined and template.host_config_key %}
  host_config_key: {{ template.host_config_key }}
{% endif %}
{% if template.ask_scm_branch_on_launch is defined and template.ask_scm_branch_on_launch %}
  ask_scm_branch_on_launch: {{ template.ask_scm_branch_on_launch }}
{% endif %}
{% if template.ask_diff_mode_on_launch is defined and template.ask_diff_mode_on_launch %}
  ask_diff_mode_on_launch: {{ template.ask_diff_mode_on_launch }}
{% endif %}
{% if template.ask_variables_on_launch is defined and template.ask_variables_on_launch %}
  ask_variables_on_launch: {{ template.ask_variables_on_launch }}
{% endif %}
{% if template.ask_limit_on_launch is defined and template.ask_limit_on_launch %}
  ask_limit_on_launch: {{ template.ask_limit_on_launch }}
{% endif %}
{% if template.ask_tags_on_launch is defined and template.ask_tags_on_launch %}
  ask_tags_on_launch: {{ template.ask_tags_on_launch }}
{% endif %}
{% if template.ask_skip_tags_on_launch is defined and template.ask_skip_tags_on_launch %}
  ask_skip_tags_on_launch: {{ template.ask_skip_tags_on_launch }}
{% endif %}
{% if template.ask_job_type_on_launch is defined and template.ask_job_type_on_launch %}
  ask_job_type_on_launch: {{ template.ask_job_type_on_launch }}
{% endif %}
{% if template.template.ask_verbosity_on_launch is defined and template.template.ask_verbosity_on_launch %}
  ask_verbosity_on_launch: {{ template.ask_verbosity_on_launch }}
{% endif %}
{% if template.ask_inventory_on_launch is defined and template.ask_inventory_on_launch %}
  ask_inventory_on_launch: {{ template.ask_inventory_on_launch }}
{% endif %}
{% if template.ask_credential_on_launch is defined and template.ask_credential_on_launch %}
  ask_credential_on_launch: {{ template.ask_credential_on_launch }}
{% endif %}
{% if template.ask_execution_environment_on_launch is defined and template.ask_execution_environment_on_launch %}
  ask_execution_environment_on_launch: {{ template.ask_execution_environment_on_launch }}
{% endif %}
{% if template.ask_forks_on_launch is defined and template.ask_forks_on_launch %}
  ask_forks_on_launch: {{ template.ask_forks_on_launch }}
{% endif %}
{% if template.ask_instance_groups_on_launch is defined and template.ask_instance_groups_on_launch %}
  ask_instance_groups_on_launch: {{ template.ask_instance_groups_on_launch }}
{% endif %}
{% if template.ask_job_slice_count_on_launch is defined and template.ask_job_slice_count_on_launch %}
  ask_job_slice_count_on_launch: {{ template.ask_job_slice_count_on_launch }}
{% endif %}
{% if template.ask_labels_on_launch is defined and template.ask_labels_on_launch %}
  ask_labels_on_launch: {{ template.ask_labels_on_launch }}
{% endif %}
{% if template.ask_timeout_on_launch is defined and template.ask_timeout_on_launch %}
  ask_timeout_on_launch: {{ template.ask_timeout_on_launch }}
{% endif %}
{% if template.prevent_instance_group_fallback is defined and template.prevent_instance_group_fallback %}
  prevent_instance_group_fallback: {{ template.prevent_instance_group_fallback }}
{% endif %}
{% if template.become_enabled is defined and template.become_enabled %}
  become_enabled: {{ template.become_enabled }}
{% endif %}
{% if template.allow_simultaneous is defined and template.allow_simultaneous %}
  allow_simultaneous: {{ template.allow_simultaneous }}
{% endif %}
{% if template.timeout is defined and template.timeout %}
  timeout: {{ template.timeout }}
{% endif %}
{% if template.job_slice_count is defined and template.job_slice_count %}
  job_slice_count: {{ template.job_slice_count }}
{% endif %}
{% if template.webhook_service is defined and template.webhook_service %}
  webhook_service: {{ template.webhook_service }}
{% endif %}
{% if template.webhook_credential is defined and template.webhook_credential %}
  webhook_credential: {{ template.webhook_credential }}
{% endif %}
{% if template.scm_branch is defined and template.scm_branch %}
  scm_branch: {{ template.scm_branch }}
{% endif %}
{% if template.labels is defined and template.labels %}
  labels: {{ template.labels }}
{% endif %}
  state: present	# change state to absent to delete the job template
{% if template.credentials is defined and template.credentials %}
  credentials:
{% for credential in template.credentials %}
  - {{ credential }}
{% endfor %}
{% else %}
  credentials: []  # If credentials are not defined, print an empty list
{% endif %}
{% if template.extra_vars is defined and template.extra_vars and template.extra_vars != '---' and template.extra_vars != '' and template.extra_vars != '{}' %}
  extra_vars:
{% for key, value in template.extra_vars.items() %}
    {{ key }}: {{ value | regex_replace('{% raw %} ','!unsafe \'')  | regex_replace(' {% endraw %}', '\'')}}
{% endfor %}
{% endif %}
{% if template.survey_enabled is defined and template.survey_enabled %}
  survey_enabled: {{ template.survey_enabled }}
{% endif %}
{% if template.survey_spec is defined %}
  survey_spec:
    name: {{ template.survey_spec.name | default('') | to_json(ensure_ascii=False) }}
    description: {{ template.survey_spec.description | default('') | to_json(ensure_ascii=False) }}
    spec:
{% for individual_spec in template.survey_spec.spec %}
      - question_name: {{ individual_spec.question_name | default('') | to_json(ensure_ascii=False) }}
        question_description: {{ individual_spec.question_description | default('') | to_json(ensure_ascii=False) }}
        required: {{ individual_spec.required }}
        type: {{ individual_spec.type }}
        variable: {{ individual_spec.variable }}
        min: {{ individual_spec.min }}
        max: {{ individual_spec.max }}
        default: {{ individual_spec.default | default('') | to_json(ensure_ascii=False) }}
        choices: {{ individual_spec.choices | default('') | to_json(ensure_ascii=False) }}
{% endfor %}
{% endif %}
{% if template.notification_templates_success is defined %}
  notification_templates_success:
{% for notification_template in template.notification_templates_success %}
    - {{ notification_template }}
{% endfor %}
{% endif %}
{% if template.notification_templates_started is defined %}
  notification_templates_started:
{% for notification_template in template.notification_templates_started %}
    - {{ notification_template }}
{% endfor %}
{% endif %}
{% if template.notification_templates_error is defined %}
  notification_templates_error:
{% for notification_template in template.notification_templates_error %}
    - {{ notification_template }}
{% endfor %}
{% endif %}

{% endfor %}
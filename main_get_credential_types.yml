---
- name: get credential types
  hosts: localhost
  vars:
    commit_message: "Fetched all the credential types"
    append_or_create: create


  pre_tasks:
    - name: include convert_content_to_lists.yml for credential_types
      include_tasks: convert_content_to_lists.yml
      vars:
        content: credential_types
      when: credential_types_names is defined and credential_types_names != ''

  tasks:
    - name: include tasks from role to get github user id
      include_role:
        name: github
        tasks_from: get_github_user.yml #github_user_info.json.login

    - name: Extract owner and repo from HTTPS link
      set_fact:
        owner: "{{ github_https_link | regex_replace('https://github.com/([^/]+)/.*', '\\1') }}"
        repo: "{{ github_https_link | regex_replace('.*/(.*).git', '\\1') }}"
        # file_path: "roles_details.yml"

    - name: Set Git URL with Dynamic Credentials
      set_fact:
        dynamic_git_url: "{{ github_user_info.json.login }}:{{ github_PAT | mandatory }}@{{ github_https_link | replace('https://', '') }}"
      no_log: true

    - name: Clone the Git Repository {{ git_url }}
      git:
        repo: "{{ 'https://' ~ dynamic_git_url }}"
        dest: "{{ playbook_dir }}/{{ repo }}/"
        version: "{{ git_branch }}"
        accept_hostkey: yes
        force: yes
        clone: yes
        depth: 1
        recursive: yes
      environment:
        GIT_ASKPASS: /bin/echo
      no_log: true

    - name: Set Git username
      git_config:
        name: user.name
        value: "{{ github_user_info.json.login }}"
        scope: file
        file: "{{ playbook_dir }}/{{ repo }}/.git/config"

    - name: Set Git email
      git_config:
        name: user.email
        value: "{{ github_user_info.json.email }}"
        scope: file
        file: "{{ playbook_dir }}/{{ repo }}/.git/config"

    - name: include get_credential_types role
      include_role:
        name: get_credential_types

  post_tasks:
    - name: Add file to Git index
      command: git add .
      args:
        chdir: "{{ playbook_dir }}/{{ repo }}"
      
    - name: Commit changes
      command: git commit -m "{{ commit_message }}"
      args:
        chdir: "{{ playbook_dir }}/{{ repo }}"
      
    - name: Push changes to GitHub
      command: git push
      args:
        chdir: "{{ playbook_dir }}/{{ repo }}"
